@model StraightPoolScore.StraightPoolGame

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("EndTurn", "Game", new { id = Model.Id })) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <table>
        <tr>
            @if (Model.CurrentPlayerId == Model.Player1.Id) {
                <td style="font-weight:bold">@Model.Player1.Name</td>
            } else {
                <td>@Model.Player1.Name</td>
            }
            <td rowspan="2">
                Race to @(Model.Limit).<br />
                @(Model.BallsRemaining) balls remaining.
            </td>
            @if (Model.CurrentPlayerId == Model.Player2.Id) {
                <td style="font-weight:bold">@Model.Player2.Name</td>
            } else {
                <td>@Model.Player2.Name</td>
            }
        </tr>
        <tr>
            <td>@Model.Player1.Score</td>
            <td>@Model.Player2.Score</td>
        </tr>
        <tr>
            <td>@Model.Player1.AverageBallsPerInning</td>
            <td rowspan="2">
                @Html.EditorFor(model => model.BallsRemaining)
                <br />
                <input type="submit" name="ending" value="Foul" />
                <input type="submit" name="ending" value="Miss" />
                <input type="submit" name="ending" value="Safety" />
                <input type="submit" name="ending" value="NewRack" />
            </td>
            <td>@Model.Player2.AverageBallsPerInning</td>
        </tr>
        <tr>
            <td>@Model.Player1.HighRun</td>
            <td>@Model.Player2.HighRun</td>
        </tr>
    </table>
}

@*@using (Html.BeginForm("EndTurn", "Game")) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    <fieldset>
        <legend>StraightPoolGame</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Limit)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Limit)
            @Html.ValidationMessageFor(model => model.Limit)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BallsRemaining)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BallsRemaining)
            @Html.ValidationMessageFor(model => model.BallsRemaining)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NumberOfInnings)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NumberOfInnings)
            @Html.ValidationMessageFor(model => model.NumberOfInnings)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CurrentPlayerId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CurrentPlayerId)
            @Html.ValidationMessageFor(model => model.CurrentPlayerId)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
